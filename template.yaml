AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-lambda-mail-forwarder

  Sample SAM Template for aws-lambda-mail-forwarder

Resources:
  MailForwarder:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: mail_forwarder/
      Handler: app.lambda_handler
      Runtime: python3.7
      Timeout: 10
      Environment:
        Variables:
          FORWARD_TO_ADDRESS: 'federico.lancerin@gmail.com'
          FORWARD_FROM_ADDRESS: 'mail@lancerin.com'
      Policies:
        - S3ReadPolicy:
            BucketName: !ImportValue mail-lancerin-com-LancerinComMailBucket
        - SESBulkTemplatedCrudPolicy:
            IdentityName: lancerin.com

  S3NotificationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt MailForwarder.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !ImportValue mail-lancerin-com-LancerinComMailBucketArn

Outputs:
  MailForwarderArn:
    Description: "MailForwarder Function ARN"
    Value: !GetAtt MailForwarder.Arn
    Export:
      Name: !Sub '${AWS::StackName}-MailForwarderArn'
  MailForwarderRole:
    Description: "Implicit IAM Role created for MailForwarder"
    Value: !GetAtt MailForwarderRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-MailForwarderRole'
